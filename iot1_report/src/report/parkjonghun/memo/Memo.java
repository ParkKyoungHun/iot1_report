package report.parkjonghun.memo;

public class Memo {
//  생성자 클래스명 과 같아야한다. 리턴 타입없다. 보이드 안써도됨.
//  함수 리턴타입있어도 되고 없어도됨 리턴타입이 없을 시 보이드를 써줘야함.
	
	
//	오버 로딩의 조건.
//	1. 클래스 명이 동일해야한다.
//	2. 파라미터(매개변수)의 개 수가 달라야한다.
//	3. 파라미터(매개변수) 타입이 달라야한다.
//
//	오버 라이딩이란?
//	상속받을 시에만 사용하며 함수를 재정의하여 사용하는 것을 오버라이딩이라고 한다.

//	ex) Father 클래스 안에 같은 명의 함수가 있을 시 Son클래스에서 같은 명의 함수를 
//	재정의하여 Son클래스의 같은 명의 함수를 사용하는 것.
//	
//	명시적 : 내가 누구인지 설명해줘야 하는 것.
//
//	규칙(데이터 타입)
//	Class :  첫단어 대문자. 두번째 단어 대문자 ex) ExamNew
//	int : 첫단어 소문자 두번째 단어 대문자 ex) numNew
//	String : 첫단어 소문자. 두번째 단어 대문자 ex) stringNew
//
//	&& : and (둘다 참이여야한다)
//	|| : or  (둘 중하나가 참이라면)
//
//	if 문
//	두개가 참이라도 맨앞에 if만 실행됨.
//	두개를 참으로 할려면 if문을 하나 더 만들어야함.
//	if(a == 1){
//
//	}esle if(b == 3){
//	}
//
//	접근 변경자 공부하기.
//	public : 클래스, 변수, 메소드 생성자 등의 모든 접근을 허용한다.
//   		보통 상수(static final 변수), 메소드(get/set) 등에 많이 사용.
//
//  protected : default와 같으나 추가적으로, 다른 패키지의 하위클래스에서도 상속 가능.
//      
//	default : 같은 패키지에 있는 (클래스, 변수, 메소드, 내부클래스)에서 접근 가능하다.
//     		   접근 변경자가 없는 선언되지 않은 것이 default
//
//  private : 같은 클래스에서만 접근이 가능하다. 
//             보통 인스턴스 변수, 외부에서 호출해서는 안되는 메소드
//  출처: http://uniksy1106.tistory.com/173 [* 루이지노의 행복한 이야기 : )]

}
